name: Build Module
on:
  push:
    branches: [ "*" ]
  workflow_dispatch:
    inputs:
      name:
        description: "World"
        default: "Hello"
jobs:
  build:
    environment: build
    runs-on: ubuntu-latest
    steps:
    - name: Get branch name
      id: branch-name
      uses: tj-actions/branch-names@v7

    - name: Cloning the repo
      run: |
        pwd
        git clone https://github.com/$REPO_OWNER/$REPO_NAME && cd $REPO_NAME && git checkout master && cd ..
        git clone https://github.com/$REPO_OWNER/$REPO_NAME built && cd built && git checkout built && cd ..
      env: 
        BRANCH:  ${{steps.branch-name.outputs.current_branch}}
        REPO_NAME: ${{github.event.repository.name}}
        REPO_OWNER: ${{github.repository_owner}}


    - name: Building the module
      run: |
        cd $REPO_NAME
        mkdir /home/runner/images
        # Initialize an empty array for the JSON objects
        json_array=()

        # Function to build modules and copy icons
        build_and_copy() {
          for folder in */; do
            # Remove trailing slash to get folder name
            folder_name="${folder%/}"

            echo "Processing subfolder: $folder_name"

            # Navigate into the subfolder
            cd "$folder_name"

            make build-module
            cp ./*.module /home/runner
            cp ./src/icon.png /home/runner/images/"$folder_name".png

            # Read the contents of metadata.json into a variable
            metadata=$(cat "$folder_name/src/metadata.json")

            # Append the metadata to the JSON array
            json_array+=("$metadata")

            # Navigate back to the main directory
            cd ..
          done
        }

        # Check and build for Video folder
        if [ -d "Video" ]; then
          echo "Building Videos"
          cd Video
          shopt -s nullglob  # Enable nullglob
          build_and_copy
          shopt -u nullglob  # Disable nullglob
          cd ..
        else
          echo "Video folder not found, skipping..."
        fi

        # Check and build for Book folder
        if [ -d "Book" ]; then
          echo "Building Books"
          cd Book
          shopt -s nullglob  # Enable nullglob
          build_and_copy
          shopt -u nullglob  # Disable nullglob
          cd ..
        else
          echo "Book folder not found, skipping..."
        fi

        # Check and build for Text folder
        if [ -d "Text" ]; then
          echo "Building Texts"
          cd Text
          shopt -s nullglob  # Enable nullglob
          build_and_copy
          shopt -u nullglob  # Disable nullglob
          cd ..
        else
          echo "Text folder not found, skipping..."
        fi
        cd ..

        # Convert the array to a JSON string
        json_string=$(printf '%s\n' "${json_array[@]}" | jq -s .)

        # Write the JSON string to a file
        echo "$json_string" > files.json
        cp ./files.json /home/runner
      env:
        REPO_NAME: ${{github.event.repository.name}}
        REPO_OWNER: ${{github.repository_owner}}
        TOKEN: ${{secrets.GITHUB_TOKEN}}

    - uses: actions/checkout@v3
      with:
        ref: "built"

    - run: |
          rm -f *.module
          if [ -d "Video" ]; then
            rm -rf Video
          fi
          if [ -d "Book" ]; then
            rm -rf Book
          fi
          if [ -d "Text" ]; then
            rm -rf Text
          fi
          cp /home/runner/*.module ./
          cp /home/runner/files.json ./
          mkdir -p images
          cp /home/runner/images/* ./images/
          ls -a
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add . && git commit -m "updated modules" && git push